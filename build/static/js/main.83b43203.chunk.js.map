{"version":3,"sources":["index.js"],"names":["Calculator","props","_this","Object","C_Users_maxen_Documents_Code_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","buttonsName","onetoNineReg","operatorStr","calculation","string","operatorReg","arrayWithoutOperator","split","filter","number","test","operatorArray","Array","from","operator","length","shift","reduce","a","b","numberA","parseFloat","numberB","console","log","state","display","updateDisplay","bind","C_Users_maxen_Documents_Code_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","clearDisplay","calculate","_this2","setState","concat","clear","_this3","_this4","pad","map","x","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Button","key","id","value","updateProps","className","onClick","React","Component","_this5","_super2","_this6","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.83b43203.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calculation: \"\",\n      display: \"0\"\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n    this.calculate = this.calculate.bind(this);\n    this.calculation = this.calculation.bind(this);\n  }\n\n  buttonsName = [\n    [\"÷\", \"divide\"],\n    [\"7\", \"seven\"],\n    [\"8\", \"eight\"],\n    [\"9\", \"nine\"],\n    [\"*\", \"multiply\"],\n    [\"4\", \"four\"],\n    [\"5\", \"five\"],\n    [\"6\", \"six\"],\n    [\"-\", \"subtract\"],\n    [\"1\", \"one\"],\n    [\"2\", \"two\"],\n    [\"3\", \"three\"],\n    [\"+\", \"add\"],\n    [\".\", \"decimal\"],\n    [\"0\", \"zero\"]\n  ];\n  onetoNineReg = /[1-9]/;\n  operatorStr = /[+,\\-,*,÷]+/;\n  updateDisplay(number) {\n    if (/^0(?!\\.)/.test(this.state.display)) {\n      if (this.onetoNineReg.test(number)) {\n        if (this.state.display[0] === \"0\") {\n          this.setState({\n            calculation: this.state.calculation + `${number}`,\n            display: `${number}`\n          });\n        } else {\n          this.setState({\n            calculation: this.state.calculation + `${number}`,\n            display: this.state.display + `${number}`\n          });\n        }\n      } else if (/[.]/.test(number)) {\n        this.setState(state => ({\n          calculation: this.state.calculation + state.display + `${number}`,\n          display: state.display + `${number}`\n        }));\n      }\n    } else if (/\\.{1}/.test(this.state.display) && number === \".\") {\n      console.log(\"Not allowed\");\n    } else {\n      if (\n        this.operatorStr.test(this.state.display[0]) ||\n        this.operatorStr.test(number)\n      ) {\n        this.setState({\n          calculation: this.state.calculation + `${number}`,\n          display: `${number}`\n        });\n      } else {\n        this.setState(state => ({\n          calculation: this.state.calculation + `${number}`,\n          display: state.display + `${number}`\n        }));\n      }\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      calculation: \"\",\n      display: \"0\"\n    });\n    console.clear();\n  }\n  calculation = string => {\n    const operatorReg = /[+,\\-,*,÷]+/g;\n\n    const arrayWithoutOperator = string\n      .split(/([+,\\-,*,÷])(?<![*,\\-,+,÷]-)/g)\n      .filter(number => /[\\d]/.test(number));\n\n    const operatorArray = Array.from(string).filter(operator =>\n      operatorReg.test(operator)\n    );\n    if (operatorArray.length === arrayWithoutOperator.length) {\n      operatorArray.shift();\n    }\n\n    return arrayWithoutOperator.reduce((a, b) => {\n      let numberA = parseFloat(a);\n      let numberB = parseFloat(b);\n\n      switch (operatorArray[0]) {\n        case \"+\":\n          operatorArray.shift();\n          return numberA + numberB;\n        case \"-\":\n          operatorArray.shift();\n          return numberA - numberB;\n        case \"*\":\n          operatorArray.shift();\n          return numberA * numberB;\n        case \"÷\":\n          operatorArray.shift();\n          return numberA / numberB;\n        default:\n          console.log(\"error\");\n      }\n    });\n  };\n  calculate() {\n    this.setState(state => ({\n      display: this.calculation(state.calculation)\n    }));\n  }\n\n  render() {\n    let pad = this.buttonsName.map(x => {\n      return (\n        <Button\n          key={x + 1}\n          id={x[1]}\n          value={x[0]}\n          updateProps={this.updateDisplay}\n          className=\"greenButtons\"\n        />\n      );\n    });\n    return (\n      <div className=\"grid-container\">\n        <div className=\"display\">\n          <p>{this.state.calculation}</p>\n          <p id=\"display\">{this.state.display}</p>\n        </div>\n        <button id=\"clear\" className=\"clear\" onClick={this.clearDisplay}>\n          AC\n        </button>\n        {pad}\n        <button id=\"equals\" className=\"equal\" onClick={this.calculate}>\n          =\n        </button>\n      </div>\n    );\n  }\n}\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick() {\n    this.props.updateProps(this.props.value);\n  }\n  render() {\n    return (\n      <button\n        id={this.props.id}\n        className={this.props.className}\n        onClick={() => this.props.updateProps(this.props.value)}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Calculator />, rootElement);\n"],"sourceRoot":""}